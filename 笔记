cout cerr cin clog:四种标准输入输出流,cerr不使用缓存,直接显示.

左值和右值: 左值(在赋值语句中可左可右),右值(在赋值语句中只可右), 函数传递值或函数返回值的时候需要讨论.

变量名:必须以字母或下划线开头,可以由字母、数字和下划线组成.

定义对象:直接初始化int ival(1024);复制初始化int ival=1024.

class成员默认指定为private; struct成员默认指定为public.

通过基类指针指向派生类对象,调用函数时:
1.若是非虚函数,直接执行基类的函数
2.若是虚函数,若派生类重写这个函数,则调用派生类的函数,否则调用基类的.
3.若是纯虚函数(纯虚类不能实例化),强制调用派生类中的函数,派生类必须实现纯虚函数.

私有继承是has a,但是尽量使用组合.
共有继承是is a.

虚函数表在构造函数中初始化，所以构造函数不能是虚函数。
为了释放派生类的资源，基类的析构函数必须虚函数，防止覆盖派生类的析构函数。

gcc 编译过程：
预处理---> 编译，生成汇编代码--->  汇编,生成机器码或目标码 ---> 链接（链接静态库，动态链接库）生成可执行文件
链接静态库的方式是直接复制粘贴到可执行文件中， 动态库是在运行过程中加载。
-E (产生stdout的输出)  -s (产生汇编代码) -c 生成机器码或目标代码文件  -o 生成可执行文件  -save-temps 生成前面所有的文件 -Wall 输出警告信息
-l 头文件路径 -L 库文件路径 -fPIC 在加载动态库时，不用每次都在同一内存地址  -v 展示编译的详细过程信息  -ansi 支持ISO C89风格
-fsigned-char -funsigned-char 有符号和无符号的转化    -D 定义并调用命令宏  --Werror 将所有警告转变成错误  @file  file存储编译所需的参数

定义宏 #define CONT(x) #x
#取参数内容
定义宏  #define link(x,y) x##y
##用来连接两个参数 即x##y是xy

信号是由操作系统传给进程的中断，会提早终止一个程序。
signal(int signum, void (func*)(int)) 接受信号sig,并由func* 函数处理。 信号量定义在 <csignal>中

多线程
POSIX线程：
同步，又称直接制约关系，是指多个线程（或进程）为了合作完成任务，必须严格按照规定的 某种先后次序来运行。 
互斥，又称间接制约关系，是指系统中的某些共享资源，一次只允许一个线程访问。当一个线程正在访问该临界资源时，其它线程必须等待。
#include <pthread.h>
pthread_create (thread, attr, start_routine, arg)  //start_routine运行函数  arg运行函数参数
pthread_join(thread, return_status) 用来等待一个线程的结束，用于同步，若不结束，主线程一直阻塞，状态变为joinable
pthread_detach(thread_self) 状态变为unjoinable，如此一来，该线程运行结束后会自动释放所有资源，主线程不会被阻塞。
pthread_exit (status) 

公共网关接口（CGI），是一套标准，定义了信息是如何在 Web 服务器和客户端脚本之间进行交换的。
cgicc-X.X.X

c++逆向工程分析工具：OllyDBG（调试器），PEid（PE文件分析，常见的EXE、DLL、OCX、SYS、COM都是PE文件，PE文件是微软Windows操作系统上的程序文件），IDA（反汇编静态分析工具）




